/* 
https://leetcode.com/problems/number-of-recent-calls/submissions/

 */
var RecentCounter = function() {
    this.requests = []
    this.front = 0
    this.count = 1
    this.frontReq = 0;
};

/** 
 * @param {number} t
 * @return {number}
 */
RecentCounter.prototype.ping = function(t) {
    this.requests.push(t)
    if(this.front === 0){
      return this.front = this.count
    }
    if(this.requests[this.front-1] < t-3000 ){
       if(this.requests[this.front] < t-3000 ){
         this.front++
         return this.count = this.count-1
        }else{
          this.count++
          return this.count
        }
         this.front++
         return this.count
    }
    this.count++
    return this.count
};
const recentCounter = new RecentCounter();
//["RecentCounter","ping","ping","ping","ping","ping"]
//[[],[642],[1849],[4921],[5936],[5957]]
console.log(recentCounter.ping(642));     // requests = [1], range is [-2999,1], return 1
console.log(recentCounter.ping(1849));   // requests = [1, 100], range is [-2900,100], return 2
console.log(recentCounter.ping(4921));  // requests = [1, 100, 3001], range is [1,3001], return 3
console.log(recentCounter.ping(5936));  // requests = [1, 100, 3001, 3002], range is [2,3002], return 3
console.log(recentCounter.ping(5957));

console.log(5936-3000)
//[null,1,2,1,2,3]



var RecentCounter = function() {
    this.counter = []
};
RecentCounter.prototype.ping = function(t) {
    this.counter.push(t)
    while(this.counter[0] < t - 3000){ 
      this.counter.shift()
  } 
  return this.counter.length
};